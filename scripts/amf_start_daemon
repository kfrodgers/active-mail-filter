#! /usr/bin/python
# Copyright (c) 2016, Kevin Rodgers
# Released subject to the New BSD License
# Please see http://en.wikipedia.org/wiki/BSD_licenses

import os
import sys
import getopt
import logging
from active_mail_filter import amf_config
from active_mail_filter.rest_client import post_url, get_url

logger = logging.getLogger(amf_config.logging.logger)

PROGNAME = os.path.basename(sys.argv[0])
USAGE = ('Usage: {0}\n'.format(PROGNAME))

HOST = os.getenv('AMF_HTTP_SERVER', amf_config.http_client.server_address)
PORT = os.getenv('AMF_HTTP_PORT', amf_config.http_server.listen_port)
auth = (amf_config.http_server.http_user, amf_config.http_server.http_password)


def usage():
    sys.stderr.write(USAGE)
    return 2


def main():
    try:
        options, remainder = getopt.getopt(sys.argv[1:], 'd', [])
    except getopt.GetoptError as err:
        sys.stderr.write('{0!s}\n'.format(err))
        sys.exit(usage())

    for opt, arg in options:
        if opt == '-d':
            logger.setLevel(logging.DEBUG)
        else:
            sys.exit(usage())

    url = 'http://%s:%s/start' % (HOST, PORT)
    status, data = post_url(url=url, auth=auth, params={})
    if status != 201:
        print 'Error: %s' % str(data['message'])

    url = 'http://%s:%s/' % (HOST, PORT)
    status, data = get_url(url=url, auth=auth)
    if status != 200:
        print 'Error: %s' % str(data['message'])
    else:
        procs = data['data']
        for p in procs.keys():
            print str(p) + ' thread is running'

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        pass
