#! /usr/bin/python
# Copyright (c) 2016, Kevin Rodgers
# Released subject to the New BSD License
# Please see http://en.wikipedia.org/wiki/BSD_licenses

import os
import sys
import getopt
from active_mail_filter import amf_config
from active_mail_filter.rest_client import get_url

PROGNAME = os.path.basename(sys.argv[0])
USAGE = ('Usage: {0} '
         '[-u <username>]\n'.format(PROGNAME))

FORMAT = '%-20s %-20s %-15s %-10s %-10s'
HOST = os.getenv('AMF_HTTP_SERVER', amf_config.http_client.server_address)
PORT = os.getenv('AMF_HTTP_PORT', amf_config.http_server.listen_port)
auth = (amf_config.http_server.http_user, amf_config.http_server.http_password)


def usage():
    sys.stderr.write(USAGE)
    return 2


def main():
    try:
        options, remainder = getopt.getopt(sys.argv[1:], 'u:', [])
    except getopt.GetoptError as err:
        sys.stderr.write('{0!s}\n'.format(err))
        sys.exit(usage())

    user = None
    for opt, arg in options:
        if opt == '-u':
            user = arg
        else:
            sys.exit(usage())

    url = 'http://%s:%s/list' % (HOST, PORT)
    status, data = get_url(url=url, auth=auth)
    if status != 200:
        if 'message' in data:
            print 'Error: ' + str(data['message'])
        else:
            print 'Error: ' + str(data)
        sys.exit(status)
    users = data['data']

    print FORMAT % ('UUID', 'User', 'Server', 'Source', 'Target')
    for name in users.keys():
        if user is not None and user != name:
            continue
        for uuid in users[name]:
            url = 'http://%s:%s/show/%s' % (HOST, PORT, uuid)
            statud, data = get_url(url=url, auth=auth)
            if status != 200:
                print str(data)
                sys.exit(status)
            rec = data['data']
            print FORMAT % (rec['uuid'], rec['user'], rec['mail_server'], rec['source'], rec['target'])

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        pass
